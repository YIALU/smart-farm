<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ls.smartfarm.device.dao.UserDao">
    <resultMap id="BaseResultMap" type="com.ls.smartfarm.device.entity.UserEntity">
        <constructor>
            <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="username" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="password" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="email" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="phone" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="question" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="answer" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="role" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
            <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
            <arg column="status" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="address" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="avatar" jdbcType="VARCHAR" javaType="java.lang.String"/>
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
        id, username, password, email, phone, question, answer, role, create_time, update_time, status, address, avatar
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from farm_user
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        DELETE FROM farm_user
        WHERE id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.ls.smartfarm.device.entity.UserEntity">
        INSERT INTO farm_user (id, username, password,
        email, phone, question,
        answer, role, create_time,
        update_time, status, address)
        VALUES (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
        #{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR},
        #{question,jdbcType=VARCHAR},
        #{answer,jdbcType=VARCHAR}, #{role,jdbcType=INTEGER}, now(),
        now(), #{status,jdbcType=INTEGER}, #{address,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.ls.smartfarm.device.entity.UserEntity">
        insert into farm_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="question != null">
                question,
            </if>
            <if test="answer != null">
                answer,
            </if>
            <if test="role != null">
                role,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="address != null">
                address,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="question != null">
                #{question,jdbcType=VARCHAR},
            </if>
            <if test="answer != null">
                #{answer,jdbcType=VARCHAR},
            </if>
            <if test="role != null">
                #{role,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                now(),
            </if>
            <if test="updateTime != null">
                now(),
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.ls.smartfarm.device.entity.UserEntity">
        update farm_user
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="question != null">
                question = #{question,jdbcType=VARCHAR},
            </if>
            <if test="answer != null">
                answer = #{answer,jdbcType=VARCHAR},
            </if>
            <if test="role != null">
                role = #{role,jdbcType=INTEGER},
            </if>
            <if test="avatar != null">
                avatar = #{avatar,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                now(),
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.ls.smartfarm.device.entity.UserEntity">
        UPDATE farm_user
        SET username = #{username,jdbcType=VARCHAR},
        password = #{password,jdbcType=VARCHAR},
        email = #{email,jdbcType=VARCHAR},
        phone = #{phone,jdbcType=VARCHAR},
        question = #{question,jdbcType=VARCHAR},
        answer = #{answer,jdbcType=VARCHAR},
        role = #{role,jdbcType=INTEGER},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        update_time = now(),
        status = #{status,jdbcType=INTEGER},
        address = #{address,jdbcType=VARCHAR}
        WHERE id = #{id,jdbcType=INTEGER}
    </update>

    <select id="checkUsername" resultType="java.lang.Integer" parameterType="string">
        SELECT count(1)
        FROM farm_user
        WHERE username = #{username}
    </select>


    <select id="checkEmail" resultType="java.lang.Integer" parameterType="string">
        SELECT count(1)
        FROM farm_user
        WHERE email = #{email,jdbcType=VARCHAR}
    </select>

    <select id="checkPhone" resultType="java.lang.Integer" parameterType="string">
        SELECT count(1)
        FROM farm_user
        WHERE phone = #{phone,jdbcType=VARCHAR}
    </select>

    <select id="selectRole" resultType="java.lang.Integer" parameterType="int">
        SELECT role
        FROM farm_user
        WHERE id = #{id,jdbcType=INTEGER}
    </select>

    <select id="selectStatus" resultType="java.lang.Integer" parameterType="int">
        SELECT status
        FROM farm_user
        WHERE id = #{id,jdbcType=INTEGER}
    </select>

    <select id="selectLogin" resultMap="BaseResultMap" parameterType="map">
        SELECT
        <include refid="Base_Column_List"/>
        FROM farm_user
        WHERE username = #{username}
        AND password = #{password}
    </select>

    <select id="selectList" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM farm_user
        ORDER BY id asc
    </select>

    <select id="search" resultMap="BaseResultMap" parameterType="string">
        SELECT
        <include refid="Base_Column_List"/>
        FROM farm_user
        WHERE username LIKE CONCAT(CONCAT('%', #{str}), '%')
        OR email LIKE CONCAT(CONCAT('%', #{str}), '%')
        OR phone LIKE CONCAT(CONCAT('%', #{str}), '%')
        ORDER BY id asc
    </select>

    <select id="getNewUserCountByWeek" resultType="java.lang.Integer">
        SELECT count(*)
        FROM farm_user
        WHERE to_days(create_time) = to_days(subdate(curdate(), date_format(curdate(), '%w') + #{day}));
    </select>


</mapper>